/*! For license information please see main.c131cc5413bf4add0227.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersivewebsite("main",{"./app/components/Canvas/index.js":(e,r,s)=>{s.r(r),s.d(r,{default:()=>m});var t=s("./node_modules/ogl/src/core/Renderer.js"),n=s("./node_modules/ogl/src/core/Camera.js"),a=s("./node_modules/ogl/src/core/Transform.js"),o=s("./node_modules/ogl/src/extras/Box.js"),i=s("./node_modules/ogl/src/core/Program.js"),c=s("./node_modules/ogl/src/core/Mesh.js"),d=s("./app/shaders/plane-fragment.glsl"),h=s("./app/shaders/plane-vertex.glsl");Object(function(){var e=new Error("Cannot find module ''");throw e.code="MODULE_NOT_FOUND",e}());class m{constructor(){this.createRenderer(),this.createCamera(),this.createScene(),this.createCube()}createRenderer(){this.renderer=new t.Renderer,this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new n.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new a.Transform}createCube(){this.geometry=new o.Box(this.gl),this.program=new i.Program(this.gl,{vertex:h.default,fragment:d.default}),this.mesh=new c.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight})}update(){this.mesh.rotation.x+=.01,this.mesh.rotation.y+=.01,this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(e){e.h=()=>"705e5b75dd793b42ca9a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jMTMxY2M1NDEzYmY0YWRkMDIyNy5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7NGtCQUtlLE1BQU1BLEVBQ25CQyxjQUNFQyxLQUFLQyxpQkFDTEQsS0FBS0UsZUFDTEYsS0FBS0csY0FDTEgsS0FBS0ksWUFDTixDQUVESCxpQkFDRUQsS0FBS0ssU0FBVyxJQUFJQyxFQUFBQSxTQUVwQk4sS0FBS08sR0FBS1AsS0FBS0ssU0FBU0UsR0FFeEJDLFNBQVNDLEtBQUtDLFlBQVlWLEtBQUtPLEdBQUdJLE9BQ25DLENBRURULGVBQ0VGLEtBQUtZLE9BQVMsSUFBSUMsRUFBQUEsT0FBT2IsS0FBS08sSUFDOUJQLEtBQUtZLE9BQU9FLFNBQVNDLEVBQUksQ0FDMUIsQ0FFRFosY0FDRUgsS0FBS2dCLE1BQVEsSUFBSUMsRUFBQUEsU0FDbEIsQ0FFRGIsYUFDRUosS0FBS2tCLFNBQVcsSUFBSUMsRUFBQUEsSUFBSW5CLEtBQUtPLElBRTdCUCxLQUFLb0IsUUFBVSxJQUFJQyxFQUFBQSxRQUFRckIsS0FBS08sR0FBSSxDQUNsQ2UsT0FEa0MsVUFFbENDLFNBQVFBLEVBQUFBLFVBR1Z2QixLQUFLd0IsS0FBTyxJQUFJQyxFQUFBQSxLQUFLekIsS0FBS08sR0FBSSxDQUM1QlcsU0FBVWxCLEtBQUtrQixTQUNmRSxRQUFTcEIsS0FBS29CLFVBR2hCcEIsS0FBS3dCLEtBQUtFLFVBQVUxQixLQUFLZ0IsTUFDMUIsQ0FFRFcsV0FDRTNCLEtBQUtLLFNBQVN1QixRQUFRQyxPQUFPQyxXQUFZRCxPQUFPRSxhQUNoRC9CLEtBQUtZLE9BQU9vQixZQUFZLENBQ3RCQyxPQUFRSixPQUFPQyxXQUFhRCxPQUFPRSxhQUV0QyxDQUdERyxTQUNFbEMsS0FBS3dCLEtBQUtXLFNBQVNDLEdBQUssSUFDeEJwQyxLQUFLd0IsS0FBS1csU0FBU0UsR0FBSyxJQUV4QnJDLEtBQUtLLFNBQVNpQyxPQUFPLENBQ25CMUIsT0FBUVosS0FBS1ksT0FDYkksTUFBT2hCLEtBQUtnQixPQUVmLGtCQzlESHVCLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbW1lcnNpdmV3ZWJzaXRlLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL2luZGV4LmpzIiwid2VicGFjazovL2ltbWVyc2l2ZXdlYnNpdGUvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJveCwgQ2FtZXJhLCBSZW5kZXJlciwgTWVzaCwgUHJvZ3JhbSwgVHJhbnNmb3JtIH0gZnJvbSBcIm9nbFwiO1xuaW1wb3J0IGZyYWdtZW50IGZyb20gXCJzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2xcIjtcbmltcG9ydCB2ZXJ0ZXggZnJvbSBcInNoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2xcIjtcbmltcG9ydCBIb21lIGZyb20gXCJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FudmFzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jcmVhdGVSZW5kZXJlcigpO1xuICAgIHRoaXMuY3JlYXRlQ2FtZXJhKCk7XG4gICAgdGhpcy5jcmVhdGVTY2VuZSgpO1xuICAgIHRoaXMuY3JlYXRlQ3ViZSgpO1xuICB9XG5cbiAgY3JlYXRlUmVuZGVyZXIoKSB7XG4gICAgdGhpcy5yZW5kZXJlciA9IG5ldyBSZW5kZXJlcigpO1xuXG4gICAgdGhpcy5nbCA9IHRoaXMucmVuZGVyZXIuZ2w7XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZ2wuY2FudmFzKTtcbiAgfVxuXG4gIGNyZWF0ZUNhbWVyYSgpIHtcbiAgICB0aGlzLmNhbWVyYSA9IG5ldyBDYW1lcmEodGhpcy5nbCk7XG4gICAgdGhpcy5jYW1lcmEucG9zaXRpb24ueiA9IDU7XG4gIH1cblxuICBjcmVhdGVTY2VuZSgpIHtcbiAgICB0aGlzLnNjZW5lID0gbmV3IFRyYW5zZm9ybSgpO1xuICB9XG5cbiAgY3JlYXRlQ3ViZSgpIHtcbiAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IEJveCh0aGlzLmdsKTtcblxuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgICAgIHZlcnRleCxcbiAgICAgIGZyYWdtZW50LFxuICAgIH0pO1xuXG4gICAgdGhpcy5tZXNoID0gbmV3IE1lc2godGhpcy5nbCwge1xuICAgICAgZ2VvbWV0cnk6IHRoaXMuZ2VvbWV0cnksXG4gICAgICBwcm9ncmFtOiB0aGlzLnByb2dyYW0sXG4gICAgfSk7XG5cbiAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpO1xuICB9XG5cbiAgb25SZXNpemUoKSB7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIHRoaXMuY2FtZXJhLnBlcnNwZWN0aXZlKHtcbiAgICAgIGFzcGVjdDogd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgfSk7XG4gIH1cblxuICAvL2VzdGEgZnVuY2lvbiBVUERBVEUgZXMgbGxhbWFkYSBlbiBjYWRhIEZyYW1lXG4gIHVwZGF0ZSgpIHtcbiAgICB0aGlzLm1lc2gucm90YXRpb24ueCArPSAwLjAxO1xuICAgIHRoaXMubWVzaC5yb3RhdGlvbi55ICs9IDAuMDE7XG5cbiAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih7XG4gICAgICBjYW1lcmE6IHRoaXMuY2FtZXJhLFxuICAgICAgc2NlbmU6IHRoaXMuc2NlbmUsXG4gICAgfSk7XG4gIH1cbn1cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjcwNWU1Yjc1ZGQ3OTNiNDJjYTlhXCIpIl0sIm5hbWVzIjpbIkNhbnZhcyIsImNvbnN0cnVjdG9yIiwidGhpcyIsImNyZWF0ZVJlbmRlcmVyIiwiY3JlYXRlQ2FtZXJhIiwiY3JlYXRlU2NlbmUiLCJjcmVhdGVDdWJlIiwicmVuZGVyZXIiLCJSZW5kZXJlciIsImdsIiwiZG9jdW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjYW52YXMiLCJjYW1lcmEiLCJDYW1lcmEiLCJwb3NpdGlvbiIsInoiLCJzY2VuZSIsIlRyYW5zZm9ybSIsImdlb21ldHJ5IiwiQm94IiwicHJvZ3JhbSIsIlByb2dyYW0iLCJ2ZXJ0ZXgiLCJmcmFnbWVudCIsIm1lc2giLCJNZXNoIiwic2V0UGFyZW50Iiwib25SZXNpemUiLCJzZXRTaXplIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwicGVyc3BlY3RpdmUiLCJhc3BlY3QiLCJ1cGRhdGUiLCJyb3RhdGlvbiIsIngiLCJ5IiwicmVuZGVyIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9