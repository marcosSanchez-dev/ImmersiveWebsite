/*! For license information please see main.89bd1aa23a79056d7b91.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersivewebsite("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>m});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/normalize-wheel/index.js"),l=s.n(n),r=s("./node_modules/prefix/index.js"),o=s.n(r),h=s("./node_modules/lodash/each.js"),a=s.n(h);class m{constructor({id:e,element:t,elements:s}){this.selector=t,this.selectorChildren={...s},this.id=e,this.transformPrefix=o()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},a()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}show(){return new Promise((e=>{this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{pixelY:t}=l()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight)}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("wheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("wheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"c0c2d201a99f8092c2f1"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi44OWJkMWFhMjNhNzkwNTZkN2I5MS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7d1RBSWUsTUFBTUEsRUFDbkJDLGFBQVksR0FBRUMsRUFBRixRQUFNQyxFQUFOLFNBQWVDLElBQ3pCQyxLQUFLQyxTQUFXSCxFQUNoQkUsS0FBS0UsaUJBQW1CLElBQUtILEdBQzdCQyxLQUFLSCxHQUFLQSxFQUNWRyxLQUFLRyxnQkFBa0JDLElBQU8sYUFFOUJKLEtBQUtLLGtCQUFvQkwsS0FBS00sYUFBYUMsS0FBS1AsS0FDakQsQ0FFRFEsU0FDRVIsS0FBS0YsUUFBVVcsU0FBU0MsY0FBY1YsS0FBS0MsVUFDM0NELEtBQUtELFNBQVcsQ0FBQyxFQUNqQkMsS0FBS1csT0FBUyxDQUFFQyxRQUFTLEVBQUdDLE9BQVEsRUFBR0MsS0FBTSxFQUFHQyxNQUFPLEdBRXZEQyxJQUFLaEIsS0FBS0Usa0JBQWtCLENBQUNlLEVBQU9DLEtBRWhDRCxhQUFpQkUsT0FBT0MsYUFDeEJILGFBQWlCRSxPQUFPRSxVQUN4QkMsTUFBTUMsUUFBUU4sR0FFZGpCLEtBQUtELFNBQVNtQixHQUFPRCxHQUVyQmpCLEtBQUtELFNBQVNtQixHQUFPVCxTQUFTZSxpQkFBaUJQLEdBRWIsSUFBOUJqQixLQUFLRCxTQUFTbUIsR0FBS08sT0FDckJ6QixLQUFLRCxTQUFTbUIsR0FBTyxLQUNrQixJQUE5QmxCLEtBQUtELFNBQVNtQixHQUFLTyxTQUM1QnpCLEtBQUtELFNBQVNtQixHQUFPVCxTQUFTQyxjQUFjTyxJQUUvQyxHQUVKLENBRURTLE9BQ0UsT0FBTyxJQUFJQyxTQUFTQyxJQUNsQjVCLEtBQUs2QixZQUFjQyxFQUFBQSxRQUFBQSxXQUVuQjlCLEtBQUs2QixZQUFZRSxPQUNmL0IsS0FBS0YsUUFDTCxDQUNFa0MsVUFBVyxHQUViLENBQ0VBLFVBQVcsSUFHZmhDLEtBQUs2QixZQUFZSSxNQUFNQyxJQUNyQmxDLEtBQUttQyxvQkFFTFAsR0FBUyxHQUhYLEdBTUgsQ0FFRFEsT0FDRSxPQUFPLElBQUlULFNBQVNDLElBQ2xCNUIsS0FBS3FDLHVCQUVMckMsS0FBS3NDLGFBQWVSLEVBQUFBLFFBQUFBLFdBRXBCOUIsS0FBS3NDLGFBQWFDLEdBQUd2QyxLQUFLRixRQUFTLENBQ2pDa0MsVUFBVyxFQUNYUSxXQUFZWixHQUZkLEdBS0gsQ0FFRHRCLGFBQWFtQyxHQUNYLE1BQU0sT0FBRUMsR0FBV0MsSUFBZUYsR0FFbEN6QyxLQUFLVyxPQUFPRSxRQUFVNkIsQ0FDdkIsQ0FFREUsV0FDTTVDLEtBQUtELFNBQVM4QyxVQUNoQjdDLEtBQUtXLE9BQU9JLE1BQ1ZmLEtBQUtELFNBQVM4QyxRQUFRQyxhQUFlM0IsT0FBTzRCLFlBRWpELENBRURDLFNBRUVoRCxLQUFLVyxPQUFPRSxPQUFTaUIsRUFBQUEsUUFBQUEsTUFBQUEsTUFDbkIsRUFDQTlCLEtBQUtXLE9BQU9JLE1BQ1pmLEtBQUtXLE9BQU9FLFFBR2RiLEtBQUtXLE9BQU9DLFFBQVVrQixFQUFBQSxRQUFBQSxNQUFBQSxZQUNwQjlCLEtBQUtXLE9BQU9DLFFBQ1paLEtBQUtXLE9BQU9FLE9BQ1osSUFHRWIsS0FBS1csT0FBT0MsUUFBVSxNQUV4QlosS0FBS1csT0FBT0MsUUFBVSxHQUdwQlosS0FBS0QsU0FBUzhDLFVBQ2hCN0MsS0FBS0QsU0FBUzhDLFFBQVFJLE1BQ3BCakQsS0FBS0csaUJBQ0YsZUFBY0gsS0FBS1csT0FBT0MsYUFFbEMsQ0FFRHVCLG9CQUNFaEIsT0FBTytCLGlCQUFpQixRQUFTbEQsS0FBS0ssa0JBQ3ZDLENBRURnQyx1QkFDRWxCLE9BQU9nQyxvQkFBb0IsUUFBU25ELEtBQUtLLGtCQUMxQyxrQkNySEgrQyxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1tZXJzaXZld2Vic2l0ZS8uL2FwcC9jbGFzc2VzL1BhZ2UuanMiLCJ3ZWJwYWNrOi8vaW1tZXJzaXZld2Vic2l0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdTQVAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCBOb3JtYWxpemVXaGVlbCBmcm9tIFwibm9ybWFsaXplLXdoZWVsXCI7XG5pbXBvcnQgUHJlZml4IGZyb20gXCJwcmVmaXhcIjtcbmltcG9ydCBlYWNoIGZyb20gXCJsb2Rhc2gvZWFjaFwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnZSB7XG4gIGNvbnN0cnVjdG9yKHsgaWQsIGVsZW1lbnQsIGVsZW1lbnRzIH0pIHtcbiAgICB0aGlzLnNlbGVjdG9yID0gZWxlbWVudDtcbiAgICB0aGlzLnNlbGVjdG9yQ2hpbGRyZW4gPSB7IC4uLmVsZW1lbnRzIH07XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMudHJhbnNmb3JtUHJlZml4ID0gUHJlZml4KFwidHJhbnNmb3JtXCIpO1xuXG4gICAgdGhpcy5vbk1vdXNlV2hlZWxFdmVudCA9IHRoaXMub25Nb3VzZVdoZWVsLmJpbmQodGhpcyk7XG4gIH1cblxuICBjcmVhdGUoKSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNlbGVjdG9yKTtcbiAgICB0aGlzLmVsZW1lbnRzID0ge307XG4gICAgdGhpcy5zY3JvbGwgPSB7IGN1cnJlbnQ6IDAsIHRhcmdldDogMCwgbGFzdDogMCwgbGltaXQ6IDAgfTtcblxuICAgIGVhY2godGhpcy5zZWxlY3RvckNoaWxkcmVuLCAoZW50cnksIGtleSkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MRWxlbWVudCB8fFxuICAgICAgICBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5Ob2RlTGlzdCB8fFxuICAgICAgICBBcnJheS5pc0FycmF5KGVudHJ5KVxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IGVudHJ5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbnRyeSk7XG5cbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBudWxsO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVudHJ5KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc2hvdygpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIHRoaXMuYW5pbWF0aW9uSW4gPSBHU0FQLnRpbWVsaW5lKCk7XG5cbiAgICAgIHRoaXMuYW5pbWF0aW9uSW4uZnJvbVRvKFxuICAgICAgICB0aGlzLmVsZW1lbnQsXG4gICAgICAgIHtcbiAgICAgICAgICBhdXRvQWxwaGE6IDAsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBhdXRvQWxwaGE6IDEsXG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgICB0aGlzLmFuaW1hdGlvbkluLmNhbGwoKF8pID0+IHtcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpO1xuXG4gICAgICAgIHJlc29sdmUoKTsgLy9sbGFtYXMgYSBsYSBjYWxsYmFjayBmdW5jdGlvbiBkZSB0dSBuZXcgUHJvbWlzZSB5IHB1ZWRlcyBwYXNhcmxlIHVuIG9iamV0byBwYXJhIHF1ZSByZXN1ZWx2YSB1biBcInZhbHVlXCIgKHByb3BpZWRhZCkgaHR0cHM6Ly9qc2l0b3IuY29tLy05Qmt2RmJic09cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgaGlkZSgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgICAgdGhpcy5hbmltYXRpb25PdXQgPSBHU0FQLnRpbWVsaW5lKCk7XG5cbiAgICAgIHRoaXMuYW5pbWF0aW9uT3V0LnRvKHRoaXMuZWxlbWVudCwge1xuICAgICAgICBhdXRvQWxwaGE6IDAsXG4gICAgICAgIG9uQ29tcGxldGU6IHJlc29sdmUsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uTW91c2VXaGVlbChldmVudCkge1xuICAgIGNvbnN0IHsgcGl4ZWxZIH0gPSBOb3JtYWxpemVXaGVlbChldmVudCk7IC8vIHBpeGVsWSBlcyBsYSBjYW50aWRhIGRlIHNjcm9sbCBxdWUgaGFjZXMsIG5vIHRpZW5lIHVuaWRhZCBzb2xvIHNlIG1pZGUgZW4gbnVtZXJvc1xuXG4gICAgdGhpcy5zY3JvbGwudGFyZ2V0ICs9IHBpeGVsWTtcbiAgfVxuXG4gIG9uUmVzaXplKCkge1xuICAgIGlmICh0aGlzLmVsZW1lbnRzLndyYXBwZXIpIHtcbiAgICAgIHRoaXMuc2Nyb2xsLmxpbWl0ID1cbiAgICAgICAgdGhpcy5lbGVtZW50cy53cmFwcGVyLmNsaWVudEhlaWdodCAtIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICB9XG4gIH1cblxuICB1cGRhdGUoKSB7XG4gICAgLy8gY29uc29sZS5sb2coXCJ0YXJnZXQ6IFwiLCB0aGlzLnNjcm9sbC50YXJnZXQpO1xuICAgIHRoaXMuc2Nyb2xsLnRhcmdldCA9IEdTQVAudXRpbHMuY2xhbXAoXG4gICAgICAwLFxuICAgICAgdGhpcy5zY3JvbGwubGltaXQsXG4gICAgICB0aGlzLnNjcm9sbC50YXJnZXRcbiAgICApO1xuXG4gICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IEdTQVAudXRpbHMuaW50ZXJwb2xhdGUoXG4gICAgICB0aGlzLnNjcm9sbC5jdXJyZW50LFxuICAgICAgdGhpcy5zY3JvbGwudGFyZ2V0LFxuICAgICAgMC4xXG4gICAgKTtcblxuICAgIGlmICh0aGlzLnNjcm9sbC5jdXJyZW50IDwgMC4wMSkge1xuICAgICAgLy9lc3RlIGVzIHVuIFRJUCB5YSBxdWUgR1NBUCBvIGVsIG5hdmVnYWRvciBubyBpbnRlcnByZXRhbiBjb3JyZWN0YW1lbnRlIHZhbG9yZXMgYWJham8gZGUgMC4wMVxuICAgICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IDA7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuZWxlbWVudHMud3JhcHBlcikge1xuICAgICAgdGhpcy5lbGVtZW50cy53cmFwcGVyLnN0eWxlW1xuICAgICAgICB0aGlzLnRyYW5zZm9ybVByZWZpeFxuICAgICAgXSA9IGB0cmFuc2xhdGVZKC0ke3RoaXMuc2Nyb2xsLmN1cnJlbnR9cHgpYDtcbiAgICB9XG4gIH1cblxuICBhZGRFdmVudExpc3RlbmVycygpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIndoZWVsXCIsIHRoaXMub25Nb3VzZVdoZWVsRXZlbnQpO1xuICB9XG5cbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLCB0aGlzLm9uTW91c2VXaGVlbEV2ZW50KTtcbiAgfVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiYzBjMmQyMDFhOTlmODA5MmMyZjFcIikiXSwibmFtZXMiOlsiUGFnZSIsImNvbnN0cnVjdG9yIiwiaWQiLCJlbGVtZW50IiwiZWxlbWVudHMiLCJ0aGlzIiwic2VsZWN0b3IiLCJzZWxlY3RvckNoaWxkcmVuIiwidHJhbnNmb3JtUHJlZml4IiwiUHJlZml4Iiwib25Nb3VzZVdoZWVsRXZlbnQiLCJvbk1vdXNlV2hlZWwiLCJiaW5kIiwiY3JlYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsIiwiY3VycmVudCIsInRhcmdldCIsImxhc3QiLCJsaW1pdCIsImVhY2giLCJlbnRyeSIsImtleSIsIndpbmRvdyIsIkhUTUxFbGVtZW50IiwiTm9kZUxpc3QiLCJBcnJheSIsImlzQXJyYXkiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwic2hvdyIsIlByb21pc2UiLCJyZXNvbHZlIiwiYW5pbWF0aW9uSW4iLCJHU0FQIiwiZnJvbVRvIiwiYXV0b0FscGhhIiwiY2FsbCIsIl8iLCJhZGRFdmVudExpc3RlbmVycyIsImhpZGUiLCJyZW1vdmVFdmVudExpc3RlbmVycyIsImFuaW1hdGlvbk91dCIsInRvIiwib25Db21wbGV0ZSIsImV2ZW50IiwicGl4ZWxZIiwiTm9ybWFsaXplV2hlZWwiLCJvblJlc2l6ZSIsIndyYXBwZXIiLCJjbGllbnRIZWlnaHQiLCJpbm5lckhlaWdodCIsInVwZGF0ZSIsInN0eWxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=