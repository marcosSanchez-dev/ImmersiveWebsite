/*! For license information please see main.9bc7948b73833aded546.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateimmersivewebsite("main",{"./app/components/Canvas/About/Media.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var i=s("./node_modules/ogl/src/core/Texture.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),r=s("./node_modules/gsap/index.js"),n=s("./app/shaders/plane-fragment.glsl"),o=s("./app/shaders/plane-vertex.glsl");const d=class{constructor({element:e,geometry:t,gl:s,index:i,scene:h,sizes:a}){this.element=e,this.geometry=t,this.gl=s,this.scene=h,this.index=i,this.sizes=a,this.extra={x:0,y:0},this.createTexture(),this.createProgram(),this.createMesh(),this.createBounds({sizes:this.sizes})}createTexture(){this.texture=new i.Texture(this.gl);const e=this.element.querySelector("img");this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=e.getAttribute("data-src"),this.image.onload=e=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:n.default,vertex:o.default,uniforms:{tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.rotation.z=r.default.utils.random(.03*-Math.PI,.03*Math.PI)}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY()}onResize(e,t){this.extra=0,this.createBounds(e),this.updateX(t),this.updateY(0)}updateScale(){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(e=0){this.x=(this.bounds.left+e)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra}updateY(e=0){this.y=(this.bounds.top+e)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height}update(e){this.bounds&&(this.updateX(e),this.updateY(0))}}}},(function(e){e.h=()=>"66654f8b029e8acae5f8"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFLRyxFQUFJSCxLQUFLRCxNQUFNMEMsTUFDdkIsQ0FFRFEsT0FBT1QsR0FDQXhDLEtBQUtrQyxTQUNWbEMsS0FBS3FDLFFBQVFHLEdBQ2J4QyxLQUFLc0MsUUFBUSxHQUNkLGtCQ2pISFksRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2ltbWVyc2l2ZXdlYnNpdGUvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvQWJvdXQvTWVkaWEuanMiLCJ3ZWJwYWNrOi8vaW1tZXJzaXZld2Vic2l0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWVzaCwgUHJvZ3JhbSwgVGV4dHVyZSB9IGZyb20gXCJvZ2xcIjtcbmltcG9ydCBHU0FQIGZyb20gXCJnc2FwXCI7XG5pbXBvcnQgZnJhZ21lbnQgZnJvbSBcInNoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbFwiO1xuaW1wb3J0IHZlcnRleCBmcm9tIFwic2hhZGVycy9wbGFuZS12ZXJ0ZXguZ2xzbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgZ2VvbWV0cnksIGdsLCBpbmRleCwgc2NlbmUsIHNpemVzIH0pIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgIHRoaXMuZ2VvbWV0cnkgPSBnZW9tZXRyeTtcbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgICB0aGlzLnNpemVzID0gc2l6ZXM7XG5cbiAgICB0aGlzLmV4dHJhID0ge1xuICAgICAgeDogMCxcbiAgICAgIHk6IDAsXG4gICAgfTtcblxuICAgIHRoaXMuY3JlYXRlVGV4dHVyZSgpO1xuICAgIHRoaXMuY3JlYXRlUHJvZ3JhbSgpO1xuICAgIHRoaXMuY3JlYXRlTWVzaCgpO1xuICAgIHRoaXMuY3JlYXRlQm91bmRzKHtcbiAgICAgIHNpemVzOiB0aGlzLnNpemVzLFxuICAgIH0pO1xuICB9XG5cbiAgY3JlYXRlVGV4dHVyZSgpIHtcbiAgICB0aGlzLnRleHR1cmUgPSBuZXcgVGV4dHVyZSh0aGlzLmdsKTtcbiAgICBjb25zdCBpbWFnZSA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiaW1nXCIpO1xuICAgIHRoaXMuaW1hZ2UgPSBuZXcgd2luZG93LkltYWdlKCk7XG5cbiAgICAvLyBuZWNlc2l0YXMgZXNwZWNpZmljYXIgcXVlIGVsIGNyb3NzT3JpZ2luIG5vIGhhcmEgaW50ZXJjYW1iaW8gZGUgY3JlZGVuY2lhbGVzLlxuICAgIC8vIGNyb3NzT3JpZ2luIHNlIHRyYXRhIGRlIGhhY2VyIHBldGljaW9uZXMgZGUgcmVjdXJzb3MgYSB1biBzZXJ2aWRvciBjb24gdW4gZG9taW5pbyBkaWZlcmVudGUgYWwgZGVsIHNpdGlvIGFjdHVhbFxuICAgIHRoaXMuaW1hZ2UuY3Jvc3NPcmlnaW4gPSBcImFub255bW91c1wiO1xuXG4gICAgdGhpcy5pbWFnZS5zcmMgPSBpbWFnZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKTtcbiAgICB0aGlzLmltYWdlLm9ubG9hZCA9IChfKSA9PiAodGhpcy50ZXh0dXJlLmltYWdlID0gdGhpcy5pbWFnZSk7XG4gIH1cblxuICBjcmVhdGVQcm9ncmFtKCkge1xuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgICAgIC8vIGNvbiBlbCBQcm9ncmFtIGVzcGVjaWZpY2FzIGxhcyB0ZXh0dXJhcyB5IGNvbG9yZXMgZGUgbGEgZ2VvbWV0cmlhICwgbmVjZXNhcmlvIHBhcmEgZWwgTUVTSFxuICAgICAgZnJhZ21lbnQsXG4gICAgICB2ZXJ0ZXgsXG4gICAgICB1bmlmb3Jtczoge1xuICAgICAgICB0TWFwOiB7XG4gICAgICAgICAgdmFsdWU6IHRoaXMudGV4dHVyZSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVNZXNoKCkge1xuICAgIHRoaXMubWVzaCA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcbiAgICAgIGdlb21ldHJ5OiB0aGlzLmdlb21ldHJ5LFxuICAgICAgcHJvZ3JhbTogdGhpcy5wcm9ncmFtLFxuICAgIH0pO1xuXG4gICAgdGhpcy5tZXNoLnNldFBhcmVudCh0aGlzLnNjZW5lKTsgLy9hZ3JlZ2FzIGVsIE1FU0ggYSBsYSBlc2NlbmFcbiAgICB0aGlzLm1lc2gucm90YXRpb24ueiA9IEdTQVAudXRpbHMucmFuZG9tKC1NYXRoLlBJICogMC4wMywgTWF0aC5QSSAqIDAuMDMpO1xuXG4gICAgLy8gdGhpcy5tZXNoLnNjYWxlLnggPSAyO1xuICB9XG5cbiAgY3JlYXRlQm91bmRzKHsgc2l6ZXMgfSkge1xuICAgIHRoaXMuc2l6ZXMgPSBzaXplcztcbiAgICB0aGlzLmJvdW5kcyA9IHRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsgLy8gZGV2dWVsZSB1biBET01SZWN0IGNvbiBsYSBpbmZvcm1hY2lvbiBkZWwgdGFtYcOxbyBkZWwgZWxlbWVudG9cblxuICAgIHRoaXMudXBkYXRlU2NhbGUoKTtcbiAgICB0aGlzLnVwZGF0ZVgoKTtcbiAgICB0aGlzLnVwZGF0ZVkoKTtcbiAgfVxuXG4gIG9uUmVzaXplKHNpemVzLCBzY3JvbGwpIHtcbiAgICB0aGlzLmV4dHJhID0gMDtcblxuICAgIHRoaXMuY3JlYXRlQm91bmRzKHNpemVzKTtcbiAgICB0aGlzLnVwZGF0ZVgoc2Nyb2xsKTtcbiAgICB0aGlzLnVwZGF0ZVkoMCk7XG4gIH1cblxuICB1cGRhdGVTY2FsZSgpIHtcbiAgICB0aGlzLmhlaWdodCA9IHRoaXMuYm91bmRzLmhlaWdodCAvIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICB0aGlzLndpZHRoID0gdGhpcy5ib3VuZHMud2lkdGggLyB3aW5kb3cuaW5uZXJXaWR0aDtcblxuICAgIHRoaXMubWVzaC5zY2FsZS54ID0gdGhpcy5zaXplcy53aWR0aCAqIHRoaXMud2lkdGg7IC8vbXVsdGlwbGljYXMgbGEgZm9ybXVsYSBwcmVkZWZpbmlkYSAod2lkdGgpIHBvciBsYSByZWxhY2lvbiBxdWUgdGllbmVuIGVsIGVsZW1lbnRvIGNvbiBlbCB2aWV3cG9ydCAodGhpcy53aWR0aClcbiAgICB0aGlzLm1lc2guc2NhbGUueSA9IHRoaXMuc2l6ZXMuaGVpZ2h0ICogdGhpcy5oZWlnaHQ7XG4gIH1cblxuICB1cGRhdGVYKHggPSAwKSB7XG4gICAgdGhpcy54ID0gKHRoaXMuYm91bmRzLmxlZnQgKyB4KSAvIHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnggPVxuICAgICAgLXRoaXMuc2l6ZXMud2lkdGggLyAyICtcbiAgICAgIHRoaXMubWVzaC5zY2FsZS54IC8gMiArXG4gICAgICB0aGlzLnggKiB0aGlzLnNpemVzLndpZHRoICtcbiAgICAgIHRoaXMuZXh0cmE7XG4gIH1cblxuICB1cGRhdGVZKHkgPSAwKSB7XG4gICAgdGhpcy55ID0gKHRoaXMuYm91bmRzLnRvcCArIHkpIC8gd2luZG93LmlubmVySGVpZ2h0O1xuXG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnkgPVxuICAgICAgdGhpcy5zaXplcy5oZWlnaHQgLyAyIC1cbiAgICAgIHRoaXMubWVzaC5zY2FsZS55IC8gMiAtXG4gICAgICB0aGlzLnkgKiB0aGlzLnNpemVzLmhlaWdodDtcbiAgfVxuXG4gIHVwZGF0ZShzY3JvbGwpIHtcbiAgICBpZiAoIXRoaXMuYm91bmRzKSByZXR1cm47XG4gICAgdGhpcy51cGRhdGVYKHNjcm9sbCk7XG4gICAgdGhpcy51cGRhdGVZKDApO1xuICB9XG59XG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCI2NjY1NGY4YjAyOWU4YWNhZTVmOFwiKSJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJnZW9tZXRyeSIsImdsIiwiaW5kZXgiLCJzY2VuZSIsInNpemVzIiwidGhpcyIsImV4dHJhIiwieCIsInkiLCJjcmVhdGVUZXh0dXJlIiwiY3JlYXRlUHJvZ3JhbSIsImNyZWF0ZU1lc2giLCJjcmVhdGVCb3VuZHMiLCJ0ZXh0dXJlIiwiVGV4dHVyZSIsImltYWdlIiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkltYWdlIiwiY3Jvc3NPcmlnaW4iLCJzcmMiLCJnZXRBdHRyaWJ1dGUiLCJvbmxvYWQiLCJfIiwicHJvZ3JhbSIsIlByb2dyYW0iLCJmcmFnbWVudCIsInZlcnRleCIsInVuaWZvcm1zIiwidE1hcCIsInZhbHVlIiwibWVzaCIsIk1lc2giLCJzZXRQYXJlbnQiLCJyb3RhdGlvbiIsInoiLCJHU0FQIiwiTWF0aCIsIlBJIiwiYm91bmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidXBkYXRlU2NhbGUiLCJ1cGRhdGVYIiwidXBkYXRlWSIsIm9uUmVzaXplIiwic2Nyb2xsIiwiaGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJ3aWR0aCIsImlubmVyV2lkdGgiLCJzY2FsZSIsImxlZnQiLCJwb3NpdGlvbiIsInRvcCIsInVwZGF0ZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==